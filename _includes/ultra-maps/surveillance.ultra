---
type: overpass
popupTemplate: >
  {%- if tags["boundary"] -%}
  <h3>{{ tags["name"] }}</h3>
  {%- else -%}
  <h3 style="text-transform:capitalize;">Type: {{tags["surveillance:type"] | default: "(Unknown)" | replace: "_", " "}}</h3>
  <h3 >Brand: {{tags.brand | default: "(Unknown)"}}</h3>
  <h3>Manufacturer: {{tags.manufacturer | default: "(Unknown)"}}</h3>
  <h3>Operator: {{tags.operator | default: "(Unknown)"}}</h3>
  <a href="https://openstreetmap.org/{{ type }}/{{ id }}" target="_blank">View on OSM</a>
  <br>
  <a href="https://openstreetmap.org/edit?{{ type }}={{ id }}" target="_blank">Edit on OSM</a>
  {%- endif -%}
  <details>
  <summary>OSM Tags</summary>
  {%- for tag in tags %}
    {%- if tag[0] contains "website" %}
      <code>{{ tag[0] }} = <a href="{{ tag[1] }}" target="_blank">{{ tag[1] }}</a></code>
    {%- elsif tag[0] contains "wikidata" %}
      <code>{{ tag[0] }} = <a href="https://wikidata.org/wiki/{{ tag[1] }}" target="_blank">{{ tag[1] }}</a></code>
    {%- elsif tag[0] contains "wikipedia" %}
      {% assign lang = tag[1] | split: ":" | first %}
      <code>{{ tag[0] }} = <a href="https://{{ lang }}.wikipedia.org/wiki/{{ tag[1] | replace_first: lang, "" | replace_first: ":", "" }}" target="_blank">{{ tag[1] }}</a></code>
    {%- else %}
      <code>{{ tag[0] }} = {{ tag[1] }}</code>
    {%- endif %}
    <br>
  {%- endfor %}
  </details>
options:
  bounds: [-77.6093101501465,37.43670283999782,-77.38194465637208,37.60423624970319]
  hash: m
controls:
  - type: HTMLControl
    position: bottom-left
    options:
      html: >
        <div>
        <b>Legend:</b>
        <br>
        ðŸŸ¢ ALPR
        <br>
        ðŸ”µ Camera
        <br>
        ðŸ”´ Gunshot Detector
        <br>
        âš« Unknown/Other
        </div>
      css: >
        div {
          background: white;
          padding: 5px;
        }
style:
  sources:
    mask:
      type: geojson
      data: https://maprva.org/map-data/greater-rva-mask.geojson
  layers:
    - type: fill
      source: mask
      fill-opacity: 0.3
    - type: line
      filter: [==, [get, type], boundary]
      line-width: 3
    - type: symbol
      icon-overlap: always
      filter: [has, direction]
      icon-size:
        stops:
          - [5, 0]
          - [15, 1]
      icon-rotate: [to-number, [get, direction]]
      icon-image: https://maprva.org/img/surveillance-direction.png
    - type: circle
      filter: ['!=', [get, type], boundary]
      circle-stroke-width: 1
      circle-stroke-color: black
      circle-color:
        - case
        - [ ==, [ get, surveillance:type ],  gunshot_detector ]
        - red
        - [ ==, [ get, surveillance:type ],  ALPR ]
        - green
        - [ ==, [ get, surveillance:type ],  camera ]
        - blue
        - black
---
// fetch Richmond, Henrico, and Chesterfild to search in
area[wikidata=Q43421][type=boundary] -> .richmond;
area[wikidata=Q341639][type=boundary] -> .henrico;
area[wikidata=Q340608][type=boundary] -> .chesterfield;
area[wikidata=Q673772][type=boundary] -> .bonair;
// fetch surveillance devices
(
  nwr[man_made=surveillance](area.richmond);
  nwr[man_made=surveillance](area.henrico);
  nwr[man_made=surveillance](area.chesterfield);
  nwr[man_made=surveillance](area.bonair);
);
out center;
// fetch admin bounds
(
  nwr[wikidata=Q43421][type=boundary];
  nwr[wikidata=Q341639][type=boundary];
  nwr[wikidata=Q340608][type=boundary];
  nwr[wikidata=Q673772][type=boundary];
);
out geom;
